{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';// AIChatbot Component\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AIChatbot=_ref=>{let{callGeminiApi,showMessage}=_ref;const[messages,setMessages]=useState([]);const[inputMessage,setInputMessage]=useState('');const[isSending,setIsSending]=useState(false);const[isOpen,setIsOpen]=useState(false);// State to manage chatbot open/close\nconst messagesEndRef=useRef(null);// Ref for scrolling to bottom of messages\n// Scroll to the bottom of the messages div whenever messages change\nuseEffect(()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});},[messages]);const handleSendMessage=async()=>{if(!inputMessage.trim())return;const newUserMessage={text:inputMessage,sender:'user'};setMessages(prevMessages=>[...prevMessages,newUserMessage]);setInputMessage('');setIsSending(true);try{const aiResponse=await callGeminiApi(inputMessage);setMessages(prevMessages=>[...prevMessages,{text:aiResponse,sender:'ai'}]);}catch(error){showMessage(`Chatbot error: ${error.message}`,\"error\");setMessages(prevMessages=>[...prevMessages,{text:\"Sorry, I couldn't process that. Please try again.\",sender:'ai'}]);}finally{setIsSending(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"fixed bottom-4 right-4 z-40\",children:[\" \",/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsOpen(!isOpen),className:\"bg-blue-600 text-white p-4 rounded-full shadow-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all duration-300 transform hover:scale-110\",\"aria-label\":isOpen?\"Close Chatbot\":\"Open Chatbot\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"w-8 h-8\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",xmlns:\"http://www.w3.org/2000/svg\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"})})}),isOpen&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-xl w-80 h-96 flex flex-col mt-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 bg-blue-600 text-white rounded-t-lg flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-bold text-lg\",children:\"AI Chatbot\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsOpen(false),className:\"text-white hover:text-gray-200\",\"aria-label\":\"Close\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"w-6 h-6\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",xmlns:\"http://www.w3.org/2000/svg\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M6 18L18 6M6 6l12 12\"})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 p-4 overflow-y-auto space-y-4\",children:[messages.length===0&&/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 text-center italic\",children:\"Start a conversation...\"}),messages.map((msg,index)=>/*#__PURE__*/_jsx(\"div\",{className:`flex ${msg.sender==='user'?'justify-end':'justify-start'}`,children:/*#__PURE__*/_jsx(\"div\",{className:`p-3 rounded-lg max-w-[75%] ${msg.sender==='user'?'bg-blue-100 text-blue-800':'bg-gray-100 text-gray-800'}`,children:msg.text})},index)),isSending&&/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-start\",children:/*#__PURE__*/_jsx(\"div\",{className:\"p-3 rounded-lg bg-gray-100 text-gray-800 animate-pulse\",children:\"Typing...\"})}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef}),\" \"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border-t border-gray-200 flex\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"flex-1 p-2 border border-gray-300 rounded-l-md focus:outline-none focus:ring-2 focus:ring-blue-500\",placeholder:\"Type your message...\",value:inputMessage,onChange:e=>setInputMessage(e.target.value),onKeyPress:e=>{if(e.key==='Enter'&&!isSending){handleSendMessage();}},disabled:isSending}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendMessage,disabled:isSending,className:\"bg-blue-600 text-white p-2 rounded-r-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"w-6 h-6\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",xmlns:\"http://www.w3.org/2000/svg\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M14 5l7 7m0 0l-7 7m7-7H3\"})})})]})]})]});};export default AIChatbot;","map":{"version":3,"names":["React","useState","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","AIChatbot","_ref","callGeminiApi","showMessage","messages","setMessages","inputMessage","setInputMessage","isSending","setIsSending","isOpen","setIsOpen","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","newUserMessage","text","sender","prevMessages","aiResponse","error","message","className","children","onClick","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","length","map","msg","index","ref","type","placeholder","value","onChange","e","target","onKeyPress","key","disabled"],"sources":["C:/Users/Darsh/OneDrive/Desktop/New folder/toolnify-ai/src/components/AIChatbot.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\n// AIChatbot Component\r\nconst AIChatbot = ({ callGeminiApi, showMessage }) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [inputMessage, setInputMessage] = useState('');\r\n    const [isSending, setIsSending] = useState(false);\r\n    const [isOpen, setIsOpen] = useState(false); // State to manage chatbot open/close\r\n    const messagesEndRef = useRef(null); // Ref for scrolling to bottom of messages\r\n\r\n    // Scroll to the bottom of the messages div whenever messages change\r\n    useEffect(() => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n    const handleSendMessage = async () => {\r\n        if (!inputMessage.trim()) return;\r\n\r\n        const newUserMessage = { text: inputMessage, sender: 'user' };\r\n        setMessages((prevMessages) => [...prevMessages, newUserMessage]);\r\n        setInputMessage('');\r\n        setIsSending(true);\r\n\r\n        try {\r\n            const aiResponse = await callGeminiApi(inputMessage);\r\n            setMessages((prevMessages) => [...prevMessages, { text: aiResponse, sender: 'ai' }]);\r\n        } catch (error) {\r\n            showMessage(`Chatbot error: ${error.message}`, \"error\");\r\n            setMessages((prevMessages) => [...prevMessages, { text: \"Sorry, I couldn't process that. Please try again.\", sender: 'ai' }]);\r\n        } finally {\r\n            setIsSending(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"fixed bottom-4 right-4 z-40\"> {/* Adjusted z-index to be below modal but above main content */}\r\n            {/* Chatbot Toggle Button */}\r\n            <button\r\n                onClick={() => setIsOpen(!isOpen)}\r\n                className=\"bg-blue-600 text-white p-4 rounded-full shadow-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all duration-300 transform hover:scale-110\"\r\n                aria-label={isOpen ? \"Close Chatbot\" : \"Open Chatbot\"}\r\n            >\r\n                {/* Chat icon */}\r\n                <svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"></path>\r\n                </svg>\r\n            </button>\r\n\r\n            {/* Chatbot Window */}\r\n            {isOpen && (\r\n                <div className=\"bg-white rounded-lg shadow-xl w-80 h-96 flex flex-col mt-4\">\r\n                    {/* Chatbot Header */}\r\n                    <div className=\"p-4 bg-blue-600 text-white rounded-t-lg flex justify-between items-center\">\r\n                        <h3 className=\"font-bold text-lg\">AI Chatbot</h3>\r\n                        <button onClick={() => setIsOpen(false)} className=\"text-white hover:text-gray-200\" aria-label=\"Close\">\r\n                            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n                    {/* Chat Messages Area */}\r\n                    <div className=\"flex-1 p-4 overflow-y-auto space-y-4\">\r\n                        {messages.length === 0 && (\r\n                            <p className=\"text-gray-500 text-center italic\">Start a conversation...</p>\r\n                        )}\r\n                        {messages.map((msg, index) => (\r\n                            <div\r\n                                key={index}\r\n                                className={`flex ${msg.sender === 'user' ? 'justify-end' : 'justify-start'}`}\r\n                            >\r\n                                <div\r\n                                    className={`p-3 rounded-lg max-w-[75%] ${\r\n                                        msg.sender === 'user'\r\n                                            ? 'bg-blue-100 text-blue-800'\r\n                                            : 'bg-gray-100 text-gray-800'\r\n                                    }`}\r\n                                >\r\n                                    {msg.text}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                        {isSending && (\r\n                            <div className=\"flex justify-start\">\r\n                                <div className=\"p-3 rounded-lg bg-gray-100 text-gray-800 animate-pulse\">\r\n                                    Typing...\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        <div ref={messagesEndRef} /> {/* Element to scroll into view */}\r\n                    </div>\r\n                    {/* Chat Input */}\r\n                    <div className=\"p-4 border-t border-gray-200 flex\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"flex-1 p-2 border border-gray-300 rounded-l-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                            placeholder=\"Type your message...\"\r\n                            value={inputMessage}\r\n                            onChange={(e) => setInputMessage(e.target.value)}\r\n                            onKeyPress={(e) => {\r\n                                if (e.key === 'Enter' && !isSending) {\r\n                                    handleSendMessage();\r\n                                }\r\n                            }}\r\n                            disabled={isSending}\r\n                        />\r\n                        <button\r\n                            onClick={handleSendMessage}\r\n                            disabled={isSending}\r\n                            className=\"bg-blue-600 text-white p-2 rounded-r-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                        >\r\n                            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M14 5l7 7m0 0l-7 7m7-7H3\"></path>\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AIChatbot;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAE1D;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAAoC,IAAnC,CAAEC,aAAa,CAAEC,WAAY,CAAC,CAAAF,IAAA,CAC7C,KAAM,CAACG,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACa,YAAY,CAAEC,eAAe,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACe,SAAS,CAAEC,YAAY,CAAC,CAAGhB,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACiB,MAAM,CAAEC,SAAS,CAAC,CAAGlB,QAAQ,CAAC,KAAK,CAAC,CAAE;AAC7C,KAAM,CAAAmB,cAAc,CAAGjB,MAAM,CAAC,IAAI,CAAC,CAAE;AAErC;AACAD,SAAS,CAAC,IAAM,KAAAmB,qBAAA,CACZ,CAAAA,qBAAA,CAAAD,cAAc,CAACE,OAAO,UAAAD,qBAAA,iBAAtBA,qBAAA,CAAwBE,cAAc,CAAC,CAAEC,QAAQ,CAAE,QAAS,CAAC,CAAC,CAClE,CAAC,CAAE,CAACZ,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAAa,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,CAACX,YAAY,CAACY,IAAI,CAAC,CAAC,CAAE,OAE1B,KAAM,CAAAC,cAAc,CAAG,CAAEC,IAAI,CAAEd,YAAY,CAAEe,MAAM,CAAE,MAAO,CAAC,CAC7DhB,WAAW,CAAEiB,YAAY,EAAK,CAAC,GAAGA,YAAY,CAAEH,cAAc,CAAC,CAAC,CAChEZ,eAAe,CAAC,EAAE,CAAC,CACnBE,YAAY,CAAC,IAAI,CAAC,CAElB,GAAI,CACA,KAAM,CAAAc,UAAU,CAAG,KAAM,CAAArB,aAAa,CAACI,YAAY,CAAC,CACpDD,WAAW,CAAEiB,YAAY,EAAK,CAAC,GAAGA,YAAY,CAAE,CAAEF,IAAI,CAAEG,UAAU,CAAEF,MAAM,CAAE,IAAK,CAAC,CAAC,CAAC,CACxF,CAAE,MAAOG,KAAK,CAAE,CACZrB,WAAW,CAAC,kBAAkBqB,KAAK,CAACC,OAAO,EAAE,CAAE,OAAO,CAAC,CACvDpB,WAAW,CAAEiB,YAAY,EAAK,CAAC,GAAGA,YAAY,CAAE,CAAEF,IAAI,CAAE,mDAAmD,CAAEC,MAAM,CAAE,IAAK,CAAC,CAAC,CAAC,CACjI,CAAC,OAAS,CACNZ,YAAY,CAAC,KAAK,CAAC,CACvB,CACJ,CAAC,CAED,mBACIV,KAAA,QAAK2B,SAAS,CAAC,6BAA6B,CAAAC,QAAA,EAAC,GAAC,cAE1C9B,IAAA,WACI+B,OAAO,CAAEA,CAAA,GAAMjB,SAAS,CAAC,CAACD,MAAM,CAAE,CAClCgB,SAAS,CAAC,mMAAmM,CAC7M,aAAYhB,MAAM,CAAG,eAAe,CAAG,cAAe,CAAAiB,QAAA,cAGtD9B,IAAA,QAAK6B,SAAS,CAAC,SAAS,CAACG,IAAI,CAAC,MAAM,CAACC,MAAM,CAAC,cAAc,CAACC,OAAO,CAAC,WAAW,CAACC,KAAK,CAAC,4BAA4B,CAAAL,QAAA,cAC7G9B,IAAA,SAAMoC,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAACC,WAAW,CAAC,GAAG,CAACC,CAAC,CAAC,+JAA+J,CAAO,CAAC,CAC3O,CAAC,CACF,CAAC,CAGR1B,MAAM,eACHX,KAAA,QAAK2B,SAAS,CAAC,4DAA4D,CAAAC,QAAA,eAEvE5B,KAAA,QAAK2B,SAAS,CAAC,2EAA2E,CAAAC,QAAA,eACtF9B,IAAA,OAAI6B,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAAC,YAAU,CAAI,CAAC,cACjD9B,IAAA,WAAQ+B,OAAO,CAAEA,CAAA,GAAMjB,SAAS,CAAC,KAAK,CAAE,CAACe,SAAS,CAAC,gCAAgC,CAAC,aAAW,OAAO,CAAAC,QAAA,cAClG9B,IAAA,QAAK6B,SAAS,CAAC,SAAS,CAACG,IAAI,CAAC,MAAM,CAACC,MAAM,CAAC,cAAc,CAACC,OAAO,CAAC,WAAW,CAACC,KAAK,CAAC,4BAA4B,CAAAL,QAAA,cAC7G9B,IAAA,SAAMoC,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAACC,WAAW,CAAC,GAAG,CAACC,CAAC,CAAC,sBAAsB,CAAO,CAAC,CAClG,CAAC,CACF,CAAC,EACR,CAAC,cAENrC,KAAA,QAAK2B,SAAS,CAAC,sCAAsC,CAAAC,QAAA,EAChDvB,QAAQ,CAACiC,MAAM,GAAK,CAAC,eAClBxC,IAAA,MAAG6B,SAAS,CAAC,kCAAkC,CAAAC,QAAA,CAAC,yBAAuB,CAAG,CAC7E,CACAvB,QAAQ,CAACkC,GAAG,CAAC,CAACC,GAAG,CAAEC,KAAK,gBACrB3C,IAAA,QAEI6B,SAAS,CAAE,QAAQa,GAAG,CAAClB,MAAM,GAAK,MAAM,CAAG,aAAa,CAAG,eAAe,EAAG,CAAAM,QAAA,cAE7E9B,IAAA,QACI6B,SAAS,CAAE,8BACPa,GAAG,CAAClB,MAAM,GAAK,MAAM,CACf,2BAA2B,CAC3B,2BAA2B,EAClC,CAAAM,QAAA,CAEFY,GAAG,CAACnB,IAAI,CACR,CAAC,EAXDoB,KAYJ,CACR,CAAC,CACDhC,SAAS,eACNX,IAAA,QAAK6B,SAAS,CAAC,oBAAoB,CAAAC,QAAA,cAC/B9B,IAAA,QAAK6B,SAAS,CAAC,wDAAwD,CAAAC,QAAA,CAAC,WAExE,CAAK,CAAC,CACL,CACR,cACD9B,IAAA,QAAK4C,GAAG,CAAE7B,cAAe,CAAE,CAAC,IAAC,EAC5B,CAAC,cAENb,KAAA,QAAK2B,SAAS,CAAC,mCAAmC,CAAAC,QAAA,eAC9C9B,IAAA,UACI6C,IAAI,CAAC,MAAM,CACXhB,SAAS,CAAC,oGAAoG,CAC9GiB,WAAW,CAAC,sBAAsB,CAClCC,KAAK,CAAEtC,YAAa,CACpBuC,QAAQ,CAAGC,CAAC,EAAKvC,eAAe,CAACuC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CACjDI,UAAU,CAAGF,CAAC,EAAK,CACf,GAAIA,CAAC,CAACG,GAAG,GAAK,OAAO,EAAI,CAACzC,SAAS,CAAE,CACjCS,iBAAiB,CAAC,CAAC,CACvB,CACJ,CAAE,CACFiC,QAAQ,CAAE1C,SAAU,CACvB,CAAC,cACFX,IAAA,WACI+B,OAAO,CAAEX,iBAAkB,CAC3BiC,QAAQ,CAAE1C,SAAU,CACpBkB,SAAS,CAAC,+JAA+J,CAAAC,QAAA,cAEzK9B,IAAA,QAAK6B,SAAS,CAAC,SAAS,CAACG,IAAI,CAAC,MAAM,CAACC,MAAM,CAAC,cAAc,CAACC,OAAO,CAAC,WAAW,CAACC,KAAK,CAAC,4BAA4B,CAAAL,QAAA,cAC7G9B,IAAA,SAAMoC,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAACC,WAAW,CAAC,GAAG,CAACC,CAAC,CAAC,0BAA0B,CAAO,CAAC,CACtG,CAAC,CACF,CAAC,EACR,CAAC,EACL,CACR,EACA,CAAC,CAEd,CAAC,CAED,cAAe,CAAApC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}