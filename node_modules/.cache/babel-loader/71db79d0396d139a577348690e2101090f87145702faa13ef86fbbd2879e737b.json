{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Darsh\\\\OneDrive\\\\Desktop\\\\New folder\\\\toolnify-ai\\\\src\\\\components\\\\TextToSpeechTool.jsx\";\nimport React, { useState } from 'react';\n\n// Text-to-Speech Tool Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextToSpeechTool = ({\n  speechText,\n  setSpeechText,\n  isSpeaking,\n  setIsSpeaking,\n  showMessage\n}) => {\n  const handleSpeak = () => {\n    if (!speechText.trim()) {\n      showMessage(\"Please enter text to speak.\", \"error\");\n      return;\n    }\n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(speechText);\n      utterance.lang = 'en-US'; // Default language, can be made configurable\n      utterance.pitch = 1; // Default pitch\n      utterance.rate = 1; // Default rate\n\n      utterance.onstart = () => setIsSpeaking(true);\n      utterance.onend = () => setIsSpeaking(false);\n      utterance.onerror = event => {\n        setIsSpeaking(false);\n        showMessage(`Speech synthesis error: ${event.error}`, \"error\");\n      };\n      window.speechSynthesis.speak(utterance);\n    } else {\n      showMessage(\"Text-to-Speech is not supported in your browser.\", \"error\");\n    }\n  };\n  const handleStop = () => {\n    if ('speechSynthesis' in window) {\n      window.speechSynthesis.cancel();\n      setIsSpeaking(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-xl shadow-2xl p-6 sm:p-10 w-full max-w-4xl space-y-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl sm:text-5xl font-extrabold text-center text-gray-800 mb-8\",\n      children: \"Text-to-Speech\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-50 p-6 rounded-lg shadow-inner border border-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold text-gray-700 mb-6 text-center\",\n        children: \"Convert Text to Voice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"w-full p-4 border border-gray-300 rounded-md mb-4 resize-y focus:ring-teal-500 focus:border-teal-500 transition duration-200 min-h-[120px]\",\n        placeholder: \"Enter text to convert to speech...\",\n        value: speechText,\n        onChange: e => setSpeechText(e.target.value),\n        rows: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col sm:flex-row gap-4 justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSpeak,\n          disabled: isSpeaking,\n          className: \"flex-1 bg-teal-600 text-white py-3 px-6 rounded-md text-lg font-semibold hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-teal-500 focus:ring-offset-2 transition duration-300 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\",\n          children: isSpeaking ? 'Speaking...' : 'Speak Text'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStop,\n          disabled: !isSpeaking,\n          className: \"flex-1 bg-red-600 text-white py-3 px-6 rounded-md text-lg font-semibold hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 transition duration-300 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\",\n          children: \"Stop Speaking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_c = TextToSpeechTool;\nexport default TextToSpeechTool;\nvar _c;\n$RefreshReg$(_c, \"TextToSpeechTool\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextToSpeechTool","speechText","setSpeechText","isSpeaking","setIsSpeaking","showMessage","handleSpeak","trim","window","utterance","SpeechSynthesisUtterance","lang","pitch","rate","onstart","onend","onerror","event","error","speechSynthesis","speak","handleStop","cancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","rows","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Darsh/OneDrive/Desktop/New folder/toolnify-ai/src/components/TextToSpeechTool.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Text-to-Speech Tool Component\r\nconst TextToSpeechTool = ({\r\n    speechText, setSpeechText, isSpeaking, setIsSpeaking, showMessage\r\n}) => {\r\n    const handleSpeak = () => {\r\n        if (!speechText.trim()) {\r\n            showMessage(\"Please enter text to speak.\", \"error\");\r\n            return;\r\n        }\r\n\r\n        if ('speechSynthesis' in window) {\r\n            const utterance = new SpeechSynthesisUtterance(speechText);\r\n            utterance.lang = 'en-US'; // Default language, can be made configurable\r\n            utterance.pitch = 1; // Default pitch\r\n            utterance.rate = 1;   // Default rate\r\n\r\n            utterance.onstart = () => setIsSpeaking(true);\r\n            utterance.onend = () => setIsSpeaking(false);\r\n            utterance.onerror = (event) => {\r\n                setIsSpeaking(false);\r\n                showMessage(`Speech synthesis error: ${event.error}`, \"error\");\r\n            };\r\n\r\n            window.speechSynthesis.speak(utterance);\r\n        } else {\r\n            showMessage(\"Text-to-Speech is not supported in your browser.\", \"error\");\r\n        }\r\n    };\r\n\r\n    const handleStop = () => {\r\n        if ('speechSynthesis' in window) {\r\n            window.speechSynthesis.cancel();\r\n            setIsSpeaking(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg-white rounded-xl shadow-2xl p-6 sm:p-10 w-full max-w-4xl space-y-10\">\r\n            <h1 className=\"text-4xl sm:text-5xl font-extrabold text-center text-gray-800 mb-8\">\r\n                Text-to-Speech\r\n            </h1>\r\n            <div className=\"bg-gray-50 p-6 rounded-lg shadow-inner border border-gray-200\">\r\n                <h2 className=\"text-3xl font-bold text-gray-700 mb-6 text-center\">Convert Text to Voice</h2>\r\n                <textarea\r\n                    className=\"w-full p-4 border border-gray-300 rounded-md mb-4 resize-y focus:ring-teal-500 focus:border-teal-500 transition duration-200 min-h-[120px]\"\r\n                    placeholder=\"Enter text to convert to speech...\"\r\n                    value={speechText}\r\n                    onChange={(e) => setSpeechText(e.target.value)}\r\n                    rows=\"5\"\r\n                ></textarea>\r\n                <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\r\n                    <button\r\n                        onClick={handleSpeak}\r\n                        disabled={isSpeaking}\r\n                        className=\"flex-1 bg-teal-600 text-white py-3 px-6 rounded-md text-lg font-semibold hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-teal-500 focus:ring-offset-2 transition duration-300 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                    >\r\n                        {isSpeaking ? 'Speaking...' : 'Speak Text'}\r\n                    </button>\r\n                    <button\r\n                        onClick={handleStop}\r\n                        disabled={!isSpeaking}\r\n                        className=\"flex-1 bg-red-600 text-white py-3 px-6 rounded-md text-lg font-semibold hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 transition duration-300 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                    >\r\n                        Stop Speaking\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TextToSpeechTool;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,GAAGA,CAAC;EACtBC,UAAU;EAAEC,aAAa;EAAEC,UAAU;EAAEC,aAAa;EAAEC;AAC1D,CAAC,KAAK;EACF,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAI,CAACL,UAAU,CAACM,IAAI,CAAC,CAAC,EAAE;MACpBF,WAAW,CAAC,6BAA6B,EAAE,OAAO,CAAC;MACnD;IACJ;IAEA,IAAI,iBAAiB,IAAIG,MAAM,EAAE;MAC7B,MAAMC,SAAS,GAAG,IAAIC,wBAAwB,CAACT,UAAU,CAAC;MAC1DQ,SAAS,CAACE,IAAI,GAAG,OAAO,CAAC,CAAC;MAC1BF,SAAS,CAACG,KAAK,GAAG,CAAC,CAAC,CAAC;MACrBH,SAAS,CAACI,IAAI,GAAG,CAAC,CAAC,CAAG;;MAEtBJ,SAAS,CAACK,OAAO,GAAG,MAAMV,aAAa,CAAC,IAAI,CAAC;MAC7CK,SAAS,CAACM,KAAK,GAAG,MAAMX,aAAa,CAAC,KAAK,CAAC;MAC5CK,SAAS,CAACO,OAAO,GAAIC,KAAK,IAAK;QAC3Bb,aAAa,CAAC,KAAK,CAAC;QACpBC,WAAW,CAAC,2BAA2BY,KAAK,CAACC,KAAK,EAAE,EAAE,OAAO,CAAC;MAClE,CAAC;MAEDV,MAAM,CAACW,eAAe,CAACC,KAAK,CAACX,SAAS,CAAC;IAC3C,CAAC,MAAM;MACHJ,WAAW,CAAC,kDAAkD,EAAE,OAAO,CAAC;IAC5E;EACJ,CAAC;EAED,MAAMgB,UAAU,GAAGA,CAAA,KAAM;IACrB,IAAI,iBAAiB,IAAIb,MAAM,EAAE;MAC7BA,MAAM,CAACW,eAAe,CAACG,MAAM,CAAC,CAAC;MAC/BlB,aAAa,CAAC,KAAK,CAAC;IACxB;EACJ,CAAC;EAED,oBACIL,OAAA;IAAKwB,SAAS,EAAC,wEAAwE;IAAAC,QAAA,gBACnFzB,OAAA;MAAIwB,SAAS,EAAC,oEAAoE;MAAAC,QAAA,EAAC;IAEnF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACL7B,OAAA;MAAKwB,SAAS,EAAC,+DAA+D;MAAAC,QAAA,gBAC1EzB,OAAA;QAAIwB,SAAS,EAAC,mDAAmD;QAAAC,QAAA,EAAC;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5F7B,OAAA;QACIwB,SAAS,EAAC,4IAA4I;QACtJM,WAAW,EAAC,oCAAoC;QAChDC,KAAK,EAAE7B,UAAW;QAClB8B,QAAQ,EAAGC,CAAC,IAAK9B,aAAa,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC/CI,IAAI,EAAC;MAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACZ7B,OAAA;QAAKwB,SAAS,EAAC,gDAAgD;QAAAC,QAAA,gBAC3DzB,OAAA;UACIoC,OAAO,EAAE7B,WAAY;UACrB8B,QAAQ,EAAEjC,UAAW;UACrBoB,SAAS,EAAC,kRAAkR;UAAAC,QAAA,EAE3RrB,UAAU,GAAG,aAAa,GAAG;QAAY;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,eACT7B,OAAA;UACIoC,OAAO,EAAEd,UAAW;UACpBe,QAAQ,EAAE,CAACjC,UAAW;UACtBoB,SAAS,EAAC,+QAA+Q;UAAAC,QAAA,EAC5R;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACS,EAAA,GApEIrC,gBAAgB;AAsEtB,eAAeA,gBAAgB;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}